# Default values customized for a lightweight Superset deployment
nameOverride: superset
fullnameOverride: superset

# Run as non-root user for security
runAsUser: 1000

# Secret for environment variables
secretEnv:
  create: true

# Explicitly set the secret name for env variables
envFromSecret: superset-env

# Bootstrap script to initialize Superset
bootstrapScript: |
  #!/bin/bash
  pip install "psycopg2-binary>=2.9.10" "trino>=0.330.0"
  if [ ! -f ~/bootstrap ]; then
    echo "Running Superset with uid 1000" > ~/bootstrap
    superset db upgrade
    superset init
  fi

# Extra environment variables
extraEnv:
  SUPERSET_SECRET_KEY: "GvXpxg7G1nMQaqVp4zVt0L2Yh88aZaXEKQqS8hIcF6Hk+mofMov4OTw7"  # Generated with openssl rand -base64 42

# Service configuration (moved to top level per official values.yaml)
service:
  type: NodePort
  port: 8088
  nodePort:
    http: 30088

# Configuration overrides for superset_config.py
configOverrides:
  superset_config: |
    SQLALCHEMY_DATABASE_URI = "postgresql+psycopg2://superset:superset@cnpg-cluster-rw.cnpg-database.svc.cluster.local:5432/superset"
    SECRET_KEY = "GvXpxg7G1nMQaqVp4zVt0L2Yh88aZaXEKQqS8hIcF6Hk+mofMov4OTw7"
    CACHE_CONFIG = {
        "CACHE_TYPE": "redis",
        "CACHE_REDIS_URL": "redis://superset-redis-master.superset.svc.cluster.local:6379/0",
    }
    DATA_CACHE_CONFIG = {
        "CACHE_TYPE": "redis",
        "CACHE_REDIS_URL": "redis://superset-redis-master.superset.svc.cluster.local:6379/0",
    }
    ROW_LIMIT = 5000
    SUPERSET_WEBSERVER_TIMEOUT = 60
    # Explicit Celery configuration
    CELERY_CONFIG = {
        "broker_url": "redis://superset-redis-master.superset.svc.cluster.local:6379/0",
        "result_backend": "redis://superset-redis-master.superset.svc.cluster.local:6379/0",
        "worker_concurrency": 2,
        "broker_connection_retry_on_startup": True
    }

# Superset node configuration
supersetNode:
  replicas:
    enabled: true
    replicaCount: 1
  image:
    repository: apache/superset
    tag: latest-py311
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: "100m"
      memory: "512Mi"
    limits:
      cpu: "500m"
      memory: "1024Mi"
  connections:
    redis_host: "superset-redis-master"
    redis_port: "6379"
    redis_cache_db: "1"
    redis_celery_db: "0"
    redis_ssl:
      enabled: false
  initContainers:
    - name: wait-for-postgres
      image: "apache/superset:dockerize"
      imagePullPolicy: IfNotPresent
      env:
        - name: DB_HOST
          value: "cnpg-cluster-rw.cnpg-database.svc.cluster.local"
        - name: DB_PORT
          value: "5432"
      command:
        - /bin/sh
        - -c
        - dockerize -wait "tcp://$DB_HOST:$DB_PORT" -timeout 120s

# Superset worker configuration (optimized for low memory)
supersetWorker:
  replicas:
    enabled: true
    replicaCount: 1
  image:
    repository: apache/superset
    tag: latest-py311
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: "50m"
      memory: "256Mi"
    limits:
      cpu: "300m"
      memory: "768Mi"
  initContainers:
    - name: wait-for-postgres-redis
      image: "apache/superset:dockerize"
      imagePullPolicy: IfNotPresent
      env:
        - name: DB_HOST
          value: "cnpg-cluster-rw.cnpg-database.svc.cluster.local"
        - name: DB_PORT
          value: "5432"
        - name: REDIS_HOST
          value: "superset-redis-master.superset.svc.cluster.local"
        - name: REDIS_PORT
          value: "6379"
      command:
        - /bin/sh
        - -c
        - dockerize -wait "tcp://$DB_HOST:$DB_PORT" -wait "tcp://$REDIS_HOST:$REDIS_PORT" -timeout 120s

# Disable Celery Beat, Flower, and Websockets for lightweight setup
supersetCeleryBeat:
  enabled: false
supersetCeleryFlower:
  enabled: false
supersetWebsockets:
  enabled: false

# Init job configuration
init:
  enabled: true
  image:
    repository: apache/superset
    tag: latest-py311
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: "50m"
      memory: "256Mi"
    limits:
      cpu: "300m"
      memory: "768Mi"
  createAdmin: true
  adminUser:
    username: admin
    firstname: Superset
    lastname: Admin
    email: admin@superset.com
    password: admin
  loadExamples: false
  initContainers:
    - name: wait-for-postgres
      image: "apache/superset:dockerize"
      imagePullPolicy: IfNotPresent
      env:
        - name: DB_HOST
          value: "cnpg-cluster-rw.cnpg-database.svc.cluster.local"
        - name: DB_PORT
          value: "5432"
      command:
        - /bin/sh
        - -c
        - dockerize -wait "tcp://$DB_HOST:$DB_PORT" -timeout 120s

# Redis configuration (lightweight)
redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: false
  master:
    resources:
      requests:
        cpu: "50m"
        memory: "128Mi"
      limits:
        cpu: "200m"
        memory: "256Mi"
    persistence:
      enabled: false

# Use existing PostgreSQL, disable chart's PostgreSQL
postgresql:
  enabled: false

# Disable ingress for simplicity
ingress:
  enabled: false